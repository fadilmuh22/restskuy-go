name: Build & Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-artifact:
    runs-on: ubuntu-latest
    outputs:
      servers: ${{ steps.export-deployment-matrix.outputs.servers }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Build it
        run: |
          GOOS=linux GOARCH=amd64 go build -o ${{ secrets.SERVICE }} ./main.go

      - name: Create deployment artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=vendor *

      - name: Store artifact for distribution
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

      - name: Export deployment matrix
        id: export-deployment-matrix
        run: |
          delimiter="$(openssl rand -hex 8)"
          JSON="$(cat ./.github/workflows/servers.json)"
          echo "servers<<${delimiter}" >> "${GITHUB_OUTPUT}"
          echo "$JSON" >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

  deploy-matrix:
    name: "Deploy to: ${{ matrix.server.name }}"
    runs-on: ubuntu-latest
    needs: build-artifact
    strategy:
      matrix:
        server: ${{ fromJson(needs.build-artifact.outputs.servers) }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-build
      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ matrix.server.host }}
          username: ${{ matrix.server.username }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ matrix.server.port }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ matrix.server.path }}/artifacts
      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ matrix.server.host }}
          username: ${{ matrix.server.username }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ matrix.server.port }}
          envs: GITHUB_SHA
          script: |
            mkdir -p "${{ matrix.server.path }}/releases/${GITHUB_SHA}"
            tar xzf ${{ matrix.server.path }}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ matrix.server.path }}/releases/${GITHUB_SHA}"

      - name: Deploy
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          BASE_PATH: ${{ matrix.server.path }}
          RELEASE_PATH: ${{ matrix.server.path }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ matrix.server.path }}/current
          DOT_ENV: ${{ secrets.DOT_ENV }}
        with:
          host: ${{ matrix.server.host }}
          username: ${{ matrix.server.username }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ matrix.server.port }}
          envs: GITHUB_SHA,BASE_PATH,RELEASE_PATH,ACTIVE_RELEASE_PATH,DOT_ENV
          script: |
            echo "** linking new release **"
            printf "%s" "$DOT_ENV" > "${BASE_PATH}/.env"
            ln -s -f ${BASE_PATH}/.env $RELEASE_PATH
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH

            echo "** restarting service tof apply new version **"
            sudo service ${{ secrets.SERVICE }} stop
            echo "** service stopped **"
            chmod +x ${{ matrix.server.path }}/current/${{ secrets.SERVICE }}
            sudo service ${{ secrets.SERVICE }} start
            echo "** service started **"
            ps -ef |grep ${{ secrets.SERVICE }}
